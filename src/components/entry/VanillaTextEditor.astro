<div>
  <h1>Lexical Basic - Vanilla JS</h1>
  <div class="editor-wrapper">
    <!-- <textarea id="lexical-editor"></textarea> -->
    <div id="lexical-editor" class="h-32 border" contenteditable></div>
  </div>
  <h4>Editor state:</h4>
  <textarea id="lexical-state"  class="h-32 w-80"></textarea>
</div>

<script>
  import { HeadingNode, QuoteNode, registerRichText } from "@lexical/rich-text";
  import { mergeRegister } from "@lexical/utils";
  import { $createParagraphNode, $createTextNode, $getRoot, $getSelection, createEditor } from "lexical";

  console.log("hey");

  const editorRef = document.getElementById("lexical-editor");
  const stateRef = document.getElementById(
  'lexical-state',
) as HTMLTextAreaElement;

  const initialConfig = {
    namespace: "Vanilla JS Demo",
    // Register nodes specific for @lexical/rich-text
    onError: (error: Error) => {
      console.alert(error);
    },
  };
  const editor = createEditor(initialConfig);
  editor.setRootElement(editorRef);


  editor.update(() => {
    // Get the RootNode from the EditorState
    const root = $getRoot();

    // Create a new ParagraphNode
    const paragraphNode = $createParagraphNode();

    // Create a new TextNode
    const textNode = $createTextNode("Hello world");

    // Append the text node to the paragraph
    paragraphNode.append(textNode);

    // Finally, append the paragraph to the root
    root.append(paragraphNode);
  });

  mergeRegister(
    registerRichText(editor)
    // registerDragonSupport(editor),
    // registerHistory(editor, createEmptyHistoryState(), 300),
  );

  editor.registerUpdateListener(({ editorState }) => {
    // console.log(JSON.stringify(editorState.toJSON(), undefined, 2));
      stateRef!.value = JSON.stringify(editorState.toJSON(), undefined, 2);
  });

